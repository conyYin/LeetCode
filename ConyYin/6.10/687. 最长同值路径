/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int longestUnivaluePath(TreeNode root) {
        result=0;
        arraylength(root);
        return result;
    }
    private int arraylength(TreeNode root){
        if(root==null){
            return 0;
        }
        int leftlength=arraylength(root.left);
        int rightlength=arraylength(root.right);
        int ll=0,rr=0;
        if(root.left!=null && root.left.val==root.val){
            ll+=leftlength+1;
        }
        if(root.right!=null && root.right.val==root.val){
            rr+=rightlength+1;
        }
        result=Math.max(result,ll+rr);
        return Math.max(ll, rr);
    }
    private int result;
}
